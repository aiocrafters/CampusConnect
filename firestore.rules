/**
 * @fileOverview Firestore Security Rules for CampusConnect.
 *
 * Core Philosophy: This ruleset enforces a strict school-based multi-tenancy model.
 * All data access is predicated on the authenticated user's association with a specific school.
 * Data belonging to one school is completely isolated from other schools.
 *
 * Data Structure: Data is organized hierarchically under the `/schools/{schoolId}` path.
 * All collections within a school inherit the `schoolId` for authorization independence.
 *
 * Key Security Decisions:
 * - All `list` operations must be scoped to a specific `schoolId`.
 * - User listing is generally disallowed to prevent information disclosure.
 * - Data validation is relaxed to facilitate rapid prototyping, focusing on relational integrity
 *   (e.g., ensuring `schoolId` consistency) and ownership.
 *
 * Denormalization for Authorization: The `schoolId` is denormalized into every subcollection
 * document. This avoids costly `get()` calls in security rules and enables atomic operations.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Root match to prevent unauthorized access to the entire database.
     * @path /
     * @allow (get, list) if false
     * @allow (create, update, delete) if false
     * @deny (get, list, create, update, delete) Always.
     * @principle Prevents accidental open access at the root level.
     */
    match /{document=**} {
      allow get: if false;
      allow list: if false;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Grants access to school documents.
     * @path /schools/{schoolId}
     * @allow get, list: if false; // Listing all schools is prohibited.
     * @allow create: if false; // School creation is likely handled by a separate admin process.
     * @allow update, delete: if false; // School updates and deletes are likely restricted.
     * @deny get, list, create, update, delete: Always deny.
     * @principle Enforces ownership for writes; limits read access.
     */
    match /schools/{schoolId} {
      allow get: if false;
      allow list: if false;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Grants access to student documents within a school.
     * @path /schools/{schoolId}/students/{studentId}
     * @allow get, list: if false; // Listing all students is prohibited.
     * @allow create: if false; // Student creation is likely handled by a separate admin process.
     * @allow update, delete: if false; // Student updates and deletes are likely restricted.
     * @deny get, list, create, update, delete: Always deny.
     * @principle Enforces ownership for writes; limits read access.
     */
    match /schools/{schoolId}/students/{studentId} {
      allow get: if false;
      allow list: if false;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

     /**
      * @description Grants access to student timeline event documents within a school and student.
      * @path /schools/{schoolId}/students/{studentId}/timeline/{eventId}
      * @allow get, list: if false;
      * @allow create: if false;
      * @allow update: if false;
      * @allow delete: if false;
      * @deny get, list, create, update, delete: Always deny.
      * @principle Enforces ownership for writes; limits read access.
      */
    match /schools/{schoolId}/students/{studentId}/timeline/{eventId} {
      allow get: if false;
      allow list: if false;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Grants access to class section documents within a school.
     * @path /schools/{schoolId}/classSections/{classSectionId}
     * @allow get, list: if false;
     * @allow create: if false;
     * @allow update: if false;
     * @allow delete: if false;
     * @deny get, list, create, update, delete: Always deny.
     * @principle Enforces ownership for writes; limits read access.
     */
    match /schools/{schoolId}/classSections/{classSectionId} {
      allow get: if false;
      allow list: if false;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Grants access to teacher documents within a school.
     * @path /schools/{schoolId}/teachers/{teacherId}
     * @allow get, list: if false;
     * @allow create: if false;
     * @allow update: if false;
     * @allow delete: if false;
     * @deny get, list, create, update, delete: Always deny.
     * @principle Enforces ownership for writes; limits read access.
     */
    match /schools/{schoolId}/teachers/{teacherId} {
      allow get: if false;
      allow list: if false;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

     /**
      * @description Grants access to designation documents within a school.
      * @path /schools/{schoolId}/designations/{designationId}
      * @allow get, list: if false;
      * @allow create: if false;
      * @allow update: if false;
      * @allow delete: if false;
      * @deny get, list, create, update, delete: Always deny.
      */
    match /schools/{schoolId}/designations/{designationId} {
      allow get: if false;
      allow list: if false;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Grants access to department documents within a school.
     * @path /schools/{schoolId}/departments/{departmentId}
     * @allow get, list: if false;
     * @allow create: if false;
     * @allow update: if false;
     * @allow delete: if false;
     * @deny get, list, create, update, delete: Always deny.
     */
    match /schools/{schoolId}/departments/{departmentId} {
      allow get: if false;
      allow list: if false;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Grants access to exam documents within a school.
     * @path /schools/{schoolId}/exams/{examId}
     * @allow get, list: if false;
     * @allow create: if false;
     * @allow update: if false;
     * @allow delete: if false;
     * @deny get, list, create, update, delete: Always deny.
     * @principle Enforces ownership for writes; limits read access.
     */
    match /schools/{schoolId}/exams/{examId} {
      allow get: if false;
      allow list: if false;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Grants access to subject documents within an exam.
     * @path /schools/{schoolId}/exams/{examId}/subjects/{subjectId}
     * @allow get, list: if false;
     * @allow create: if false;
     * @allow update: if false;
     * @allow delete: if false;
     * @deny get, list, create, update, delete: Always deny.
     * @principle Enforces ownership for writes; limits read access.
     */
    match /schools/{schoolId}/exams/{examId}/subjects/{subjectId} {
      allow get: if false;
      allow list: if false;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Grants access to performance record documents.
     * @path /schools/{schoolId}/performanceRecords/{performanceRecordId}
     * @allow get, list: if false;
     * @allow create: if false;
     * @allow update: if false;
     * @allow delete: if false;
     * @deny get, list, create, update, delete: Always deny.
     */
    match /schools/{schoolId}/performanceRecords/{performanceRecordId} {
      allow get: if false;
      allow list: if false;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

   /**
    * @description Grants access to master subject documents within a school.
    * @path /schools/{schoolId}/masterSubjects/{masterSubjectId}
    * @allow get, list: if false;
    * @allow create: if false;
    * @allow update: if false;
    * @allow delete: if false;
    * @deny get, list, create, update, delete: Always deny.
    */
    match /schools/{schoolId}/masterSubjects/{masterSubjectId} {
        allow get: if false;
        allow list: if false;
        allow create: if false;
        allow update: if false;
        allow delete: if false;
    }

    /**
     * @description Grants access to master class documents within a school.
     * @path /schools/{schoolId}/masterClasses/{masterClassId}
     * @allow get, list: if false;
     * @allow create: if false;
     * @allow update: if false;
     * @allow delete: if false;
     * @deny get, list, create, update, delete: Always deny.
     */
    match /schools/{schoolId}/masterClasses/{masterClassId} {
        allow get: if false;
        allow list: if false;
        allow create: if false;
        allow update: if false;
        allow delete: if false;
    }

    /**
     * @description Grants access to class incharge query documents for a student.
     * @path /schools/{schoolId}/students/{studentId}/classInchargeQueries/{classInchargeQueryId}
     * @allow get, list: if false;
     * @allow create: if false;
     * @allow update: if false;
     * @allow delete: if false;
     * @deny get, list, create, update, delete: Always deny.
     */
    match /schools/{schoolId}/students/{studentId}/classInchargeQueries/{classInchargeQueryId} {
      allow get: if false;
      allow list: if false;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Grants access to promotion documents within a school.
     * @path /schools/{schoolId}/promotions/{promotionId}
     * @allow get, list: if false;
     * @allow create: if false;
     * @allow update: if false;
     * @allow delete: if false;
     * @deny get, list, create, update, delete: Always deny.
     */
    match /schools/{schoolId}/promotions/{promotionId} {
      allow get: if false;
      allow list: if false;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Enforces uniqueness for specific fields using document IDs.
     * @path /unique_identifiers/{identifier}
     * @allow get, list: if false;  //No public listing or getting
     * @allow create: if false;  // Creation controlled by server-side logic
     * @allow update: if false;  // No updates allowed.
     * @allow delete: if false;  // Deletion controlled by server-side logic
     * @deny get, list, create, update, delete: Always deny.
     */
    match /unique_identifiers/{identifier} {
      allow get: if false;
      allow list: if false;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }
  }
}